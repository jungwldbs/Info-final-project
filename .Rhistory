<<<<<<< 7136e57d213fb8b3c49a6bb648d68935f56a085a
shiny::runApp()
shiny::runApp()
library(dplyr)
pie_chart <- function(data, year_1, cat, age){
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
=======
summary_table = kable(repo_summary)
repo_summary <- group_by(language) %>%
summarise(
ave_forks = mean(forks, na.rm=TRUE)
)
repo_summary <- group_by(languages) %>%
summarise(
ave_forks = mean(forks, na.rm=TRUE)
)
repo_summary <- group_by(sorted_data_repo, language) %>%
summarise(
ave_forks = mean(forks, na.rm=TRUE)
)
summary_table = kable(repo_summary)
repo_summary <- group_by(sorted_data_repo, language) %>%
summarise(
ave_forks = mean(forks, na.rm=TRUE)
repo_count = nrow(sorted_data_repo)
)
summarise(
ave_forks = mean(forks, na.rm=TRUE)
repo_count = nrow(sorted_data_repo)
repo_count = nrow(sorted_data_repo, na.rm=TRUE)
repo_summary <- group_by(sorted_data_repo, language) %>%
summarise(
ave_forks = mean(forks, na.rm=TRUE),
repo_count = nrow(sorted_data_repo, na.rm=TRUE)
)
repo_count = nrow(sorted_data_repo)
)
repo_summary <- group_by(sorted_data_repo, language) %>%
summarise(
ave_forks = mean(forks, na.rm=TRUE),
repo_count = nrow(sorted_data_repo)
)
summary_table = kable(repo_summary)
```
repo_summary <- group_by(sorted_data_repo, language) %>%
summarise(
ave_forks = mean(forks),
repo_count = length(language)
)
summary_table = kable(repo_summary)
```
source('~/.active-rstudio-document', echo=TRUE)
install.packages(plotly)
install.packages(plotly)
install.packages("plotly")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("plotly")
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise2.R', echo=TRUE)
View(df)
help(pop)
help("quantile")
help("cut")
help("levels")
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise2.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise2.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise2.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise2.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
### Exercise 3 ###
library(jsonlite)
data <- fromJSON('https://raw.githubusercontent.com/mkfreeman/police-shooting/master/data/response.json')
data$shots_fired <- as.numeric(data[,'Shots Fired'])
data <- data %>%
mutate(shots_fired = ifelse(is.na(shots_fired), mean(shots_fired, na.rm = T), shots_fired))
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
View(data)
)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
library(dplyr)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
View(df)
source('~/Documents/info498f/Practices/lecture-11-exercises/exercise3.R', echo=TRUE)
source('~/Desktop/Quarter 2/INFO 498/Practices/lecture-12-exercises/exercise1.R', echo=TRUE)
source('~/Desktop/Quarter 2/INFO 498/Practices/lecture-12-exercises/exercise1.R', echo=TRUE)
source('~/Desktop/Quarter 2/INFO 498/Practices/lecture-12-exercises/exercise1.R', echo=TRUE)
View(data)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, col='blue')
simulate_groups <- function(mean, sd, num_cars) {
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
num_cars = input$num_cars
)
})
})
source('traffic_sim.R')
shinyServer(function(input, output) {
output$histogram <- renderPlot({
repeat_simulation(
num_sims = input$num_sims,
mean = input$speed,
sd = input$deviation,
num_cars = input$num_cars
)
})
})
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
simulate_groups <- function(mean, sd, num_cars) {
# Simulate 100 cars w/mean speed 50
cars <- rnorm(n = num_cars, mean = mean, sd = sd)
# A function to determine if a car is slower than all of the cars
# in front of it (which createa a new group of cars **behind** it)
slower_than <- function(index) {
return(cars[index] < min(cars[1:index - 1]))
}
# Apply the slower_than function to all of the cars
new_group <- lapply(2:length(cars), slower_than)
# Determine number of groups created
groups <- length(new_group[new_group == TRUE]) + 1
return(groups)
}
repeat_simulation <- function(num_sims = 10, mean = 50, sd = 5, num_cars = 100) {
# Create an empty vector to store your results
results <- vector()
# Run your simulation 100 times, and track your results
for(i in 1:num_sims) {
results <- c(results, simulate_groups(mean, sd, num_cars))
}
# Work with your results
return(hist(results))
}
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
simulate_groups(70, 10, 20)
data("iris")
isis()
iris()
View(iris)
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
View(iris)
View(iris)
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
View(iris)
View(iris)
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
test <- isis$Species
test <- iris$Species
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lab-8')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
data("iris")
View(iris)
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
summarise("petal_length" = mean(Petal.Length),
"petal_width" = mean(Petal.Width)
)
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
choices = list("Petal Length" = "petal_length",
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
)
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
petal_info_by_species <- iris %>%
group_by(Species) %>%
summarise("petal_length" = mean(Petal.Length),
"petal_width" = mean(Petal.Width),
)
petal_info_by_species <- iris %>%
group_by(Species) %>%
summarise("petal_length" = mean(Petal.Length),
"petal_width" = mean(Petal.Width),
)
petal_info_by_species <- iris %>%
group_by(Species) %>%
summarise("petal_length" = mean(Petal.Length),
"petal_width" = mean(Petal.Width),
)
petal_info_by_species <- iris %>%
group_by(Species) %>%
summarise("petal_length" = mean(Petal.Length),
"petal_width" = mean(Petal.Width),
)
petal_info_by_species <- iris %>%
group_by(Species) %>%
summarise("petal_length" = mean(Petal.Length),
"petal_width" = mean(Petal.Width),
)
species_data <- filter(iris, Species == input$species)
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
library(plotly)
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
species_data <- filter(iris, Species == input$species)
petal_length = mean(species_data$Petal.Length)
petal_Width = mean(species_data$Petal.Width)
shinyServer(function(input, output) {
# Gets the species data
species_data <- filter(iris, Species == input$species)
petal_length = mean(species_data$Petal.Length)
petal_Width = mean(species_data$Petal.Width)
# Gets petal information by species
petal_info_by_species <- iris %>%
group_by(Species) %>%
summarise("petal_length" = mean(Petal.Length),
"petal_width" = mean(Petal.Width),
)
output$irisGraph <- renderPlotly({
plot_ly(species,
x = species_data,
y = input$petal_data,
name = "Petal Graph",
type = "bar",
) %>%
# Creates the title
layout(title = "Petal data by Species")
})
})
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Practices/lecture-16-exercises')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
x
x = "y", #eval(parse(text = input$species)),
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
species_data <- filter(iris, Species == input$species)
test = filter(iris, Species == "setosa")
View(test)
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shinyServer(function(input, output) {
abc <- reactive({
# Gets the species data
species_data <- filter(iris, Species == input$species)
species_data <- filter(iris, Species == input$species)
shinyServer(function(input, output) {
abc <- reactive({
# Gets the species data
species_data <- filter(iris, Species == input$species)
# Run the traffic simulation
library(shiny)
library(dplyr)
library(plotly)
# Getting iris data
data("iris")
# Creates a bar graph for a specific species and petal data
shinyServer(function(input, output) {
abc <- reactive({
# Gets the species data
species_data <- filter(iris, Species == input$species)
# Gets petal information by species
petal_info = sum(input$petal_data)
# Renders the actaul specifics of the graph
output$irisGraph <- renderPlotly({
plot_ly(species_data,
x = eval(parse(text = input$species)),
y = eval(parse(text = petal_info)),
name = "Petal Graph",
type = "bar"
) %>%
# Creates the title
layout(title = "Petal data by Species") %>%
return()
})
})
})
test <- 3
var <- c(3,2,1)
var <- c(3,2,1)
# Creates a bar graph for a specific species and petal data
var <- c(3,2,1)
var <- c(3,2,1)
var <- c(3,2,1)
var <- c(3,2,1)
var <- c(3,2,1)
species_data <- filter(iris, Species == input$species)
shinyServer(function(input, output) {
abc <- reactive({
# Gets the species data
species_data <- filter(iris, Species == input$species)
test <- 3
var2 <- "blah"
var <- c(3,2,1)
var2 <- "blah"
data("iris")
var <- c(3,2,1)
var2 <- "blah"
data("iris")
var <- c(3,2,1)
data("iris")
var <- c(3,2,1)
var2 <- "blah"
shinyServer(function(input, output) {
abc <- reactive({
species_data <- filter(iris, Species == input$species)
test <- 3
var3 <- "test"
data("iris")
var <- c(3,2,1)
var2 <- "blah"
var3 <- "test"
library(shiny)
library(dplyr)
library(plotly)
# Getting iris data
data("iris")
var <- c(3,2,1)
var2 <- "blah"
var3 <- "test"
# Creates a bar graph for a specific species and petal data
shinyServer(function(input, output) {
abc <- reactive({
# Gets the species data
species_data <- filter(iris, Species == input$species)
test <- 3
# Gets petal information by species
petal_info = sum(input$petal_data)
# Renders the actaul specifics of the graph
output$irisGraph <- renderPlotly({
plot_ly(species_data,
x = eval(parse(text = input$species)),
y = eval(parse(text = petal_info)),
name = "Petal Graph",
type = "bar"
) %>%
# Creates the title
layout(title = "Petal data by Species") %>%
return()
})
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
source('~/Desktop/Quarter 2/INFO 498/Practices/lecture-12-exercises/exercise1.R', echo=TRUE)
source('~/Desktop/Quarter 2/INFO 498/Practices/lecture-12-exercises/exercise1.R', echo=TRUE)
plot_ly(d,
x = table,
y = depth,
size = cut,
mode = "markers"
) %>%
# Pass your plot to the layout function to add a descriptive title
layout(title= "Diamond Stuff 2")
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/a8-building-applications')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/Info-final-project')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/Info-final-project')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/Info-final-project')
install.packages("shinythemes")
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/Info-final-project')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/Info-final-project')
shiny::runApp('Desktop/Quarter 2/INFO 498/Homework/Info-final-project')
getwd()
setwd("~/Desktop/Quarter 2/INFO 498/Homework/Info-final-project")
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
>>>>>>> stuff
